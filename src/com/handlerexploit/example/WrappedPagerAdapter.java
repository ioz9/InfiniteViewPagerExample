/*
 *    Copyright (c) 2012 Daniel Huckaby
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */
package com.handlerexploit.example;

import android.os.Parcelable;
import android.support.v4.view.PagerAdapter;
import android.view.View;
import android.view.ViewGroup;

@SuppressWarnings("deprecation")
public class WrappedPagerAdapter extends PagerAdapter {

    private PagerAdapter mPagerAdapter;

    public WrappedPagerAdapter(PagerAdapter pagerAdapter) {
        mPagerAdapter = pagerAdapter;
    }
    
    public PagerAdapter getWrappedPagerAdapter() {
        return mPagerAdapter;
    }

    @Override
    public void destroyItem(View container, int position, Object object) {
        mPagerAdapter.destroyItem(container, position, object);
    }

    @Override
    public void destroyItem(ViewGroup container, int position, Object object) {
        mPagerAdapter.destroyItem(container, position, object);
    }

    @Override
    public boolean equals(Object o) {
        return mPagerAdapter.equals(o);
    }

    @Override
    public void finishUpdate(View container) {
        mPagerAdapter.finishUpdate(container);
    }

    @Override
    public void finishUpdate(ViewGroup container) {
        mPagerAdapter.finishUpdate(container);
    }

    @Override
    public int getCount() {
        return mPagerAdapter.getCount();
    }

    @Override
    public int getItemPosition(Object object) {
        return mPagerAdapter.getItemPosition(object);
    }

    @Override
    public CharSequence getPageTitle(int position) {
        return mPagerAdapter.getPageTitle(position);
    }

    @Override
    public int hashCode() {
        return mPagerAdapter.hashCode();
    }

    @Override
    public Object instantiateItem(View container, int position) {
        return mPagerAdapter.instantiateItem(container, position);
    }

    @Override
    public Object instantiateItem(ViewGroup container, int position) {
        return mPagerAdapter.instantiateItem(container, position);
    }

    @Override
    public boolean isViewFromObject(View arg0, Object arg1) {
        return mPagerAdapter.isViewFromObject(arg0, arg1);
    }

    @Override
    public void notifyDataSetChanged() {
        mPagerAdapter.notifyDataSetChanged();
    }

    @Override
    public void restoreState(Parcelable state, ClassLoader loader) {
        mPagerAdapter.restoreState(state, loader);
    }

    @Override
    public Parcelable saveState() {
        return mPagerAdapter.saveState();
    }

    @Override
    public void setPrimaryItem(View container, int position, Object object) {
        mPagerAdapter.setPrimaryItem(container, position, object);
    }

    @Override
    public void setPrimaryItem(ViewGroup container, int position, Object object) {
        mPagerAdapter.setPrimaryItem(container, position, object);
    }

    @Override
    public void startUpdate(View container) {
        mPagerAdapter.startUpdate(container);
    }

    @Override
    public void startUpdate(ViewGroup container) {
        mPagerAdapter.startUpdate(container);
    }

    @Override
    public String toString() {
        return mPagerAdapter.toString();
    }
}